{"version":3,"file":"SummaryRow.js","sourceRoot":"","sources":["../src/SummaryRow.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,OAAO,CAAC;AAEpC,OAAO,WAAW,MAAM,eAAe,CAAC;AAcxC,SAAS,UAAU,CAAQ,EACzB,MAAM,EACN,qBAAqB,EACrB,GAAG,EACH,eAAe,EACf,MAAM,EACiB;IACvB,OAAO,CACL,6BACE,SAAS,EAAE,mBAAmB,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,kBAAkB,EACjF,KAAK,EAAE,EAAE,MAAM,EAAE,IAEhB,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAC7B,oBAAC,WAAW,IACV,GAAG,EAAE,MAAM,CAAC,GAAG,EACf,MAAM,EAAE,MAAM,EACd,qBAAqB,EAAE,qBAAqB,EAC5C,GAAG,EAAE,GAAG,GACR,CACH,CAAC,CACE,CACP,CAAC;AACJ,CAAC;AAED,eAAe,IAAI,CAAC,UAAU,CAA0D,CAAC","sourcesContent":["import React, { memo } from 'react';\n\nimport SummaryCell from './SummaryCell';\nimport { RowRendererProps } from './common/types';\n\ntype SharedRowRendererProps<R, SR> = Pick<RowRendererProps<R, SR>,\n  | 'viewportColumns'\n  | 'rowIdx'\n  | 'lastFrozenColumnIndex'\n>;\n\ninterface SummaryRowProps<R, SR> extends SharedRowRendererProps<R, SR> {\n  row: SR;\n  bottom: number;\n}\n\nfunction SummaryRow<R, SR>({\n  rowIdx,\n  lastFrozenColumnIndex,\n  row,\n  viewportColumns,\n  bottom\n}: SummaryRowProps<R, SR>) {\n  return (\n    <div\n      className={`rdg-row rdg-row-${rowIdx % 2 === 0 ? 'even' : 'odd'} rdg-summary-row`}\n      style={{ bottom }}\n    >\n      {viewportColumns.map(column => (\n        <SummaryCell<R, SR>\n          key={column.key}\n          column={column}\n          lastFrozenColumnIndex={lastFrozenColumnIndex}\n          row={row}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default memo(SummaryRow) as <R, SR>(props: SummaryRowProps<R, SR>) => JSX.Element;\n"]}