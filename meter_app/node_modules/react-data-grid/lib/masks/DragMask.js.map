{"version":3,"file":"DragMask.js","sourceRoot":"","sources":["../../src/masks/DragMask.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,QAAQ,MAAM,YAAY,CAAC;AAWlC,MAAM,CAAC,OAAO,UAAU,QAAQ,CAAC,EAAE,eAAe,EAAE,qBAAqB,EAAS;IAChF,MAAM,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,eAAe,CAAC;IACpD,IAAI,MAAM,KAAK,UAAU;QAAE,OAAO,IAAI,CAAC;IAEvC,MAAM,iBAAiB,GAAG,MAAM,GAAG,UAAU,CAAC;IAC9C,MAAM,WAAW,GAAG,iBAAiB,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;IAChE,MAAM,SAAS,GAAG,iBAAiB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IAC9D,MAAM,SAAS,GAAG,iBAAiB,CAAC,CAAC,CAAC,mCAAmC,CAAC,CAAC,CAAC,iCAAiC,CAAC;IAE9G,MAAM,UAAU,GAAG,qBAAqB,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;IACvE,KAAK,IAAI,aAAa,GAAG,WAAW,GAAG,CAAC,EAAE,aAAa,IAAI,SAAS,EAAE,aAAa,EAAE,EAAE;QACrF,MAAM,EAAE,MAAM,EAAE,GAAG,qBAAqB,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC;QACzE,UAAU,CAAC,MAAM,IAAI,MAAM,CAAC;KAC7B;IAED,OAAO,CACL,oBAAC,QAAQ,oBAAK,UAAU,IAAE,SAAS,EAAE,SAAS,IAAI,CACnD,CAAC;AACJ,CAAC","sourcesContent":["import React from 'react';\n\nimport { Position, Dimension } from '../common/types';\nimport CellMask from './CellMask';\n\nexport interface DraggedPosition extends Position {\n  overRowIdx: number;\n}\n\ninterface Props {\n  draggedPosition: DraggedPosition;\n  getSelectedDimensions: (position: Position) => Dimension;\n}\n\nexport default function DragMask({ draggedPosition, getSelectedDimensions }: Props) {\n  const { overRowIdx, idx, rowIdx } = draggedPosition;\n  if (rowIdx === overRowIdx) return null;\n\n  const isDraggedOverDown = rowIdx < overRowIdx;\n  const startRowIdx = isDraggedOverDown ? rowIdx + 1 : overRowIdx;\n  const endRowIdx = isDraggedOverDown ? overRowIdx : rowIdx - 1;\n  const className = isDraggedOverDown ? 'react-grid-cell-dragged-over-down' : 'react-grid-cell-dragged-over-up';\n\n  const dimensions = getSelectedDimensions({ idx, rowIdx: startRowIdx });\n  for (let currentRowIdx = startRowIdx + 1; currentRowIdx <= endRowIdx; currentRowIdx++) {\n    const { height } = getSelectedDimensions({ idx, rowIdx: currentRowIdx });\n    dimensions.height += height;\n  }\n\n  return (\n    <CellMask {...dimensions} className={className} />\n  );\n}\n"]}