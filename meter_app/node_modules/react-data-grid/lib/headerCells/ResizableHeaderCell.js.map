{"version":3,"file":"ResizableHeaderCell.js","sourceRoot":"","sources":["../../src/headerCells/ResizableHeaderCell.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,OAAO,CAAC;AAS5C,MAAM,CAAC,OAAO,UAAU,mBAAmB,CAAQ,EACjD,QAAQ,EACR,MAAM,EACN,QAAQ,EACwB;IAChC,SAAS,WAAW,CAAC,KAAuB;QAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO;SACR;QAED,MAAM,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC;QAChC,MAAM,EAAE,KAAK,EAAE,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;QACxD,MAAM,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;QAErC,IAAI,MAAM,GAAG,EAAE,EAAE,EAAE,sCAAsC;YACvD,OAAO;SACR;QAED,MAAM,WAAW,GAAG,CAAC,KAAiB,EAAE,EAAE;YACxC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,EAAE,aAAa,CAAC,CAAC;QACtD,CAAC,CAAC;QAEF,MAAM,SAAS,GAAG,GAAG,EAAE;YACrB,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;YACrD,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACnD,CAAC,CAAC;QAEF,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QAClD,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IAChD,CAAC;IAED,SAAS,YAAY,CAAC,KAAuB;QAC3C,MAAM,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtC,MAAM,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;QAC7B,MAAM,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC;QAChC,MAAM,EAAE,KAAK,EAAE,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;QACxD,MAAM,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;QAErC,IAAI,MAAM,GAAG,EAAE,EAAE,EAAE,sCAAsC;YACvD,OAAO;SACR;QAED,SAAS,QAAQ,CAAC,KAAiB;YACjC,KAAK,MAAM,KAAK,IAAI,KAAK,CAAC,cAAc,EAAE;gBACxC,IAAI,KAAK,CAAC,UAAU,KAAK,UAAU;oBAAE,OAAO,KAAK,CAAC;aACnD;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,WAAW,GAAG,CAAC,KAAiB,EAAE,EAAE;YACxC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC9B,IAAI,KAAK,EAAE;gBACT,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,EAAE,aAAa,CAAC,CAAC;aACrD;QACH,CAAC,CAAC;QAEF,MAAM,UAAU,GAAG,CAAC,KAAiB,EAAE,EAAE;YACvC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC9B,IAAI,CAAC,KAAK;gBAAE,OAAO;YACnB,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;YACrD,MAAM,CAAC,mBAAmB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QACrD,CAAC,CAAC;QAEF,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QAClD,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAClD,CAAC;IAED,SAAS,YAAY,CAAC,CAAS,EAAE,MAAe;QAC9C,MAAM,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC;QACtD,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACzB;IACH,CAAC;IAED,OAAO,YAAY,CAAC,QAAQ,EAAE;QAC5B,WAAW;QACX,YAAY;QACZ,QAAQ,EAAE,CACR;YACG,QAAQ,CAAC,KAAK,CAAC,QAAQ;YACxB,6BAAK,SAAS,EAAC,yBAAyB,GAAG,CAC1C,CACJ;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import React, { cloneElement } from 'react';\nimport { CalculatedColumn } from '../common/types';\n\nexport interface ResizableHeaderCellProps<R, SR> {\n  children: React.ReactElement<React.ComponentProps<'div'>>;\n  column: CalculatedColumn<R, SR>;\n  onResize: (column: CalculatedColumn<R, SR>, width: number) => void;\n}\n\nexport default function ResizableHeaderCell<R, SR>({\n  children,\n  column,\n  onResize\n}: ResizableHeaderCellProps<R, SR>) {\n  function onMouseDown(event: React.MouseEvent) {\n    if (event.button !== 0) {\n      return;\n    }\n\n    const { currentTarget } = event;\n    const { right } = currentTarget.getBoundingClientRect();\n    const offset = right - event.clientX;\n\n    if (offset > 11) { // +1px to account for the border size\n      return;\n    }\n\n    const onMouseMove = (event: MouseEvent) => {\n      handleResize(event.clientX + offset, currentTarget);\n    };\n\n    const onMouseUp = () => {\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    event.preventDefault();\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n  }\n\n  function onTouchStart(event: React.TouchEvent) {\n    const touch = event.changedTouches[0];\n    const { identifier } = touch;\n    const { currentTarget } = event;\n    const { right } = currentTarget.getBoundingClientRect();\n    const offset = right - touch.clientX;\n\n    if (offset > 11) { // +1px to account for the border size\n      return;\n    }\n\n    function getTouch(event: TouchEvent) {\n      for (const touch of event.changedTouches) {\n        if (touch.identifier === identifier) return touch;\n      }\n      return null;\n    }\n\n    const onTouchMove = (event: TouchEvent) => {\n      const touch = getTouch(event);\n      if (touch) {\n        handleResize(touch.clientX + offset, currentTarget);\n      }\n    };\n\n    const onTouchEnd = (event: TouchEvent) => {\n      const touch = getTouch(event);\n      if (!touch) return;\n      window.removeEventListener('touchmove', onTouchMove);\n      window.removeEventListener('touchend', onTouchEnd);\n    };\n\n    window.addEventListener('touchmove', onTouchMove);\n    window.addEventListener('touchend', onTouchEnd);\n  }\n\n  function handleResize(x: number, target: Element) {\n    const width = x - target.getBoundingClientRect().left;\n    if (width > 0) {\n      onResize(column, width);\n    }\n  }\n\n  return cloneElement(children, {\n    onMouseDown,\n    onTouchStart,\n    children: (\n      <>\n        {children.props.children}\n        <div className=\"rdg-header-cell-resizer\" />\n      </>\n    )\n  });\n}\n"]}