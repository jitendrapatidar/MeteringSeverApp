{"version":3,"file":"keyboardUtils.js","sourceRoot":"","sources":["../../src/utils/keyboardUtils.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,cAAc,CAAC,OAAe;IAC5C,OAAO,CAAC,OAAO,GAAG,EAAE,IAAI,OAAO,GAAG,EAAE,CAAC,CAAC,cAAc;WAC/C,OAAO,KAAK,EAAE,IAAI,OAAO,KAAK,EAAE,CAAC,mEAAmE;WACpG,CAAC,OAAO,GAAG,EAAE,IAAI,OAAO,GAAG,EAAE,CAAC,CAAC,cAAc;WAC7C,CAAC,OAAO,GAAG,EAAE,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,cAAc;WAC9C,CAAC,OAAO,GAAG,GAAG,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,qBAAqB;WACtD,CAAC,OAAO,GAAG,GAAG,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,kBAAkB;AAC3D,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,CAAsB;IACtD,OAAO,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC;AAC3E,CAAC","sourcesContent":["export function isKeyPrintable(keycode: number): boolean {\n  return (keycode > 47 && keycode < 58) // number keys\n    || keycode === 32 || keycode === 13 // spacebar & return key(s) (if you want to allow carriage returns)\n    || (keycode > 64 && keycode < 91) // letter keys\n    || (keycode > 95 && keycode < 112) // numpad keys\n    || (keycode > 185 && keycode < 193) // ;=,-./` (in order)\n    || (keycode > 218 && keycode < 223); // [\\]' (in order)\n}\n\nexport function isCtrlKeyHeldDown(e: React.KeyboardEvent): boolean {\n  return (e.ctrlKey === true || e.metaKey === true) && e.key !== 'Control';\n}\n"]}