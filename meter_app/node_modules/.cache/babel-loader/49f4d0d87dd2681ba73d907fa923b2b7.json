{"ast":null,"code":"import React, { memo } from 'react';\nimport SummaryCell from './SummaryCell';\n\nfunction SummaryRow({\n  rowIdx,\n  lastFrozenColumnIndex,\n  row,\n  viewportColumns,\n  bottom\n}) {\n  return React.createElement(\"div\", {\n    className: `rdg-row rdg-row-${rowIdx % 2 === 0 ? 'even' : 'odd'} rdg-summary-row`,\n    style: {\n      bottom\n    }\n  }, viewportColumns.map(column => React.createElement(SummaryCell, {\n    key: column.key,\n    column: column,\n    lastFrozenColumnIndex: lastFrozenColumnIndex,\n    row: row\n  })));\n}\n\nexport default memo(SummaryRow);","map":{"version":3,"sources":["../src/SummaryRow.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,IAAgB,IAAhB,QAA4B,OAA5B;AAEA,OAAO,WAAP,MAAwB,eAAxB;;AAcA,SAAS,UAAT,CAA2B;AACzB,EAAA,MADyB;AAEzB,EAAA,qBAFyB;AAGzB,EAAA,GAHyB;AAIzB,EAAA,eAJyB;AAKzB,EAAA;AALyB,CAA3B,EAMyB;AACvB,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,mBAAmB,MAAM,GAAG,CAAT,KAAe,CAAf,GAAmB,MAAnB,GAA4B,KAAK,kBADjE;AAEE,IAAA,KAAK,EAAE;AAAE,MAAA;AAAF;AAFT,GAAA,EAIG,eAAe,CAAC,GAAhB,CAAoB,MAAM,IACzB,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,IAAA,GAAG,EAAE,MAAM,CAAC,GADF;AAEV,IAAA,MAAM,EAAE,MAFE;AAGV,IAAA,qBAAqB,EAAE,qBAHb;AAIV,IAAA,GAAG,EAAE;AAJK,GAAZ,CADD,CAJH,CADF;AAeD;;AAED,eAAe,IAAI,CAAC,UAAD,CAAnB","sourcesContent":["import React, { memo } from 'react';\n\nimport SummaryCell from './SummaryCell';\nimport { RowRendererProps } from './common/types';\n\ntype SharedRowRendererProps<R, SR> = Pick<RowRendererProps<R, SR>,\n  | 'viewportColumns'\n  | 'rowIdx'\n  | 'lastFrozenColumnIndex'\n>;\n\ninterface SummaryRowProps<R, SR> extends SharedRowRendererProps<R, SR> {\n  row: SR;\n  bottom: number;\n}\n\nfunction SummaryRow<R, SR>({\n  rowIdx,\n  lastFrozenColumnIndex,\n  row,\n  viewportColumns,\n  bottom\n}: SummaryRowProps<R, SR>) {\n  return (\n    <div\n      className={`rdg-row rdg-row-${rowIdx % 2 === 0 ? 'even' : 'odd'} rdg-summary-row`}\n      style={{ bottom }}\n    >\n      {viewportColumns.map(column => (\n        <SummaryCell<R, SR>\n          key={column.key}\n          column={column}\n          lastFrozenColumnIndex={lastFrozenColumnIndex}\n          row={row}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default memo(SummaryRow) as <R, SR>(props: SummaryRowProps<R, SR>) => JSX.Element;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}