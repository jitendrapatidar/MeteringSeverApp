{"ast":null,"code":"import { useState, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\nexport default function EditorPortal({\n  target,\n  children\n}) {\n  // Keep track of when the modal element is added to the DOM\n  const [isMounted, setIsMounted] = useState(false);\n  useLayoutEffect(() => {\n    setIsMounted(true);\n  }, []); // Don't render the portal until the component has mounted,\n  // So the portal can safely access the DOM.\n\n  if (!isMounted) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(children, target);\n}","map":{"version":3,"sources":["../../src/editors/EditorPortal.tsx"],"names":[],"mappings":"AAAA,SAAgB,QAAhB,EAA0B,eAA1B,QAAiD,OAAjD;AACA,OAAO,QAAP,MAAqB,WAArB;AAOA,eAAc,SAAU,YAAV,CAAuB;AAAE,EAAA,MAAF;AAAU,EAAA;AAAV,CAAvB,EAAkD;AAC9D;AACA,QAAM,CAAC,SAAD,EAAY,YAAZ,IAA4B,QAAQ,CAAC,KAAD,CAA1C;AAEA,EAAA,eAAe,CAAC,MAAK;AACnB,IAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFc,EAEZ,EAFY,CAAf,CAJ8D,CAQ9D;AACA;;AACA,MAAI,CAAC,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,SAAO,QAAQ,CAAC,YAAT,CAAsB,QAAtB,EAAgC,MAAhC,CAAP;AACD","sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface Props {\n  children: React.ReactNode;\n  target: Element;\n}\n\nexport default function EditorPortal({ target, children }: Props) {\n  // Keep track of when the modal element is added to the DOM\n  const [isMounted, setIsMounted] = useState(false);\n\n  useLayoutEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Don't render the portal until the component has mounted,\n  // So the portal can safely access the DOM.\n  if (!isMounted) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(children, target);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}