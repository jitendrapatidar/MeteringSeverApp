{"ast":null,"code":"import React from 'react';\nconst SORT_TEXT = {\n  ASC: '\\u25B2',\n  DESC: '\\u25BC',\n  NONE: ''\n};\nexport default function SortableHeaderCell({\n  column,\n  onSort,\n  sortColumn,\n  sortDirection,\n  children\n}) {\n  sortDirection = sortColumn === column.key && sortDirection || 'NONE';\n\n  function onClick() {\n    if (!onSort) return;\n    const sortDescendingFirst = column.sortDescendingFirst || false;\n    let direction;\n\n    switch (sortDirection) {\n      case 'ASC':\n        direction = sortDescendingFirst ? 'NONE' : 'DESC';\n        break;\n\n      case 'DESC':\n        direction = sortDescendingFirst ? 'ASC' : 'NONE';\n        break;\n\n      default:\n        direction = sortDescendingFirst ? 'DESC' : 'ASC';\n        break;\n    }\n\n    onSort(column.key, direction);\n  }\n\n  return React.createElement(\"span\", {\n    className: \"rdg-header-sort-cell\",\n    onClick: onClick\n  }, React.createElement(\"span\", {\n    className: \"rdg-header-sort-name\"\n  }, children), React.createElement(\"span\", null, SORT_TEXT[sortDirection]));\n}","map":{"version":3,"sources":["../../src/headerCells/SortableHeaderCell.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AAIA,MAAM,SAAS,GAAG;AAChB,EAAA,GAAG,EAAE,QADW;AAEhB,EAAA,IAAI,EAAE,QAFU;AAGhB,EAAA,IAAI,EAAE;AAHU,CAAlB;AAiBA,eAAc,SAAU,kBAAV,CAAoC;AAChD,EAAA,MADgD;AAEhD,EAAA,MAFgD;AAGhD,EAAA,UAHgD;AAIhD,EAAA,aAJgD;AAKhD,EAAA;AALgD,CAApC,EAMC;AACb,EAAA,aAAa,GAAG,UAAU,KAAK,MAAM,CAAC,GAAtB,IAA6B,aAA7B,IAA8C,MAA9D;;AACA,WAAS,OAAT,GAAgB;AACd,QAAI,CAAC,MAAL,EAAa;AACb,UAAM,mBAAmB,GAAG,MAAM,CAAC,mBAAP,IAA8B,KAA1D;AACA,QAAI,SAAJ;;AACA,YAAQ,aAAR;AACE,WAAK,KAAL;AACE,QAAA,SAAS,GAAG,mBAAmB,GAAG,MAAH,GAAY,MAA3C;AACA;;AACF,WAAK,MAAL;AACE,QAAA,SAAS,GAAG,mBAAmB,GAAG,KAAH,GAAW,MAA1C;AACA;;AACF;AACE,QAAA,SAAS,GAAG,mBAAmB,GAAG,MAAH,GAAY,KAA3C;AACA;AATJ;;AAWA,IAAA,MAAM,CAAC,MAAM,CAAC,GAAR,EAAa,SAAb,CAAN;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAuC,IAAA,OAAO,EAAE;AAAhD,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAAwC,QAAxC,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAO,SAAS,CAAC,aAAD,CAAhB,CAFF,CADF;AAMD","sourcesContent":["import React from 'react';\nimport { HeaderCellProps } from '../HeaderCell';\nimport { SortDirection } from '../common/enums';\n\nconst SORT_TEXT = {\n  ASC: '\\u25B2',\n  DESC: '\\u25BC',\n  NONE: ''\n} as const;\n\ntype SharedHeaderCellProps<R, SR> = Pick<HeaderCellProps<R, SR>,\n  | 'column'\n  | 'sortColumn'\n  | 'sortDirection'\n  | 'onSort'\n>;\n\nexport interface Props<R, SR> extends SharedHeaderCellProps<R, SR> {\n  children: React.ReactNode;\n}\n\nexport default function SortableHeaderCell<R, SR>({\n  column,\n  onSort,\n  sortColumn,\n  sortDirection,\n  children\n}: Props<R, SR>) {\n  sortDirection = sortColumn === column.key && sortDirection || 'NONE';\n  function onClick() {\n    if (!onSort) return;\n    const sortDescendingFirst = column.sortDescendingFirst || false;\n    let direction: SortDirection;\n    switch (sortDirection) {\n      case 'ASC':\n        direction = sortDescendingFirst ? 'NONE' : 'DESC';\n        break;\n      case 'DESC':\n        direction = sortDescendingFirst ? 'ASC' : 'NONE';\n        break;\n      default:\n        direction = sortDescendingFirst ? 'DESC' : 'ASC';\n        break;\n    }\n    onSort(column.key, direction);\n  }\n\n  return (\n    <span className=\"rdg-header-sort-cell\" onClick={onClick}>\n      <span className=\"rdg-header-sort-name\">{children}</span>\n      <span>{SORT_TEXT[sortDirection]}</span>\n    </span>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}