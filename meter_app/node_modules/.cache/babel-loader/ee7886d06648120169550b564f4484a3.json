{"ast":null,"code":"import React, { memo } from 'react';\nimport classNames from 'classnames';\n\nfunction SummaryCell({\n  column,\n  lastFrozenColumnIndex,\n  row\n}) {\n  const {\n    summaryFormatter: SummaryFormatter,\n    width,\n    left,\n    summaryCellClass\n  } = column;\n  const className = classNames('rdg-cell', {\n    'rdg-cell-frozen': column.frozen,\n    'rdg-cell-frozen-last': column.idx === lastFrozenColumnIndex\n  }, typeof summaryCellClass === 'function' ? summaryCellClass(row) : summaryCellClass);\n  return React.createElement(\"div\", {\n    className: className,\n    style: {\n      width,\n      left\n    }\n  }, SummaryFormatter && React.createElement(SummaryFormatter, {\n    column: column,\n    row: row\n  }));\n}\n\nexport default memo(SummaryCell);","map":{"version":3,"sources":["../src/SummaryCell.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,IAAgB,IAAhB,QAA4B,OAA5B;AACA,OAAO,UAAP,MAAuB,YAAvB;;AAaA,SAAS,WAAT,CAA4B;AAC1B,EAAA,MAD0B;AAE1B,EAAA,qBAF0B;AAG1B,EAAA;AAH0B,CAA5B,EAI0B;AACxB,QAAM;AAAE,IAAA,gBAAgB,EAAE,gBAApB;AAAsC,IAAA,KAAtC;AAA6C,IAAA,IAA7C;AAAmD,IAAA;AAAnD,MAAwE,MAA9E;AACA,QAAM,SAAS,GAAG,UAAU,CAC1B,UAD0B,EAE1B;AACE,uBAAmB,MAAM,CAAC,MAD5B;AAEE,4BAAwB,MAAM,CAAC,GAAP,KAAe;AAFzC,GAF0B,EAM1B,OAAO,gBAAP,KAA4B,UAA5B,GAAyC,gBAAgB,CAAC,GAAD,CAAzD,GAAiE,gBANvC,CAA5B;AASA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,SAAhB;AAA2B,IAAA,KAAK,EAAE;AAAE,MAAA,KAAF;AAAS,MAAA;AAAT;AAAlC,GAAA,EACG,gBAAgB,IAAI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AAAC,IAAA,MAAM,EAAE,MAAT;AAAiB,IAAA,GAAG,EAAE;AAAtB,GAAjB,CADvB,CADF;AAKD;;AAED,eAAe,IAAI,CAAC,WAAD,CAAnB","sourcesContent":["import React, { memo } from 'react';\nimport classNames from 'classnames';\n\nimport { CellRendererProps } from './common/types';\n\ntype SharedCellRendererProps<R, SR> = Pick<CellRendererProps<R, SR>,\n  | 'lastFrozenColumnIndex'\n  | 'column'\n>;\n\ninterface SummaryCellProps<R, SR> extends SharedCellRendererProps<R, SR> {\n  row: SR;\n}\n\nfunction SummaryCell<R, SR>({\n  column,\n  lastFrozenColumnIndex,\n  row\n}: SummaryCellProps<R, SR>) {\n  const { summaryFormatter: SummaryFormatter, width, left, summaryCellClass } = column;\n  const className = classNames(\n    'rdg-cell',\n    {\n      'rdg-cell-frozen': column.frozen,\n      'rdg-cell-frozen-last': column.idx === lastFrozenColumnIndex\n    },\n    typeof summaryCellClass === 'function' ? summaryCellClass(row) : summaryCellClass\n  );\n\n  return (\n    <div className={className} style={{ width, left }}>\n      {SummaryFormatter && <SummaryFormatter column={column} row={row} />}\n    </div>\n  );\n}\n\nexport default memo(SummaryCell) as <R, SR>(props: SummaryCellProps<R, SR>) => JSX.Element;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}